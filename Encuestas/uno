Vista
# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.shortcuts import get_object_or_404, render
from django.http import HttpResponseRedirect, HttpResponse
from django.core.urlresolvers import reverse
from django.template import Template
from django.template import loader
from django.http import Http404

from .models import Pregunta, Opcion


# Create your views here.

def index(request):
	ultima_pregunta = Pregunta.objects.order_by('-pub_date')[:5]
	#template = loader.get_template('index.html')
	contexto = {
		'ultima_pregunta': ultima_pregunta,
	}
	#return HttpResponse(template.render(contexto, request))

	#*******Utlizando render*****
	return render(request, 'index.html', contexto)
	#salida = ', '.join([q.texto_pregunta for q in ultima_pregunta])
	#return HttpResponse(salida)

def detalle(request, pregunta_id):
	"""try:
		pregunta = Pregunta.objects.get(pk=pregunta_id)
	except Pregunta.DoesNotExist:
		raise Http404("Pregunta no encontrada")
	return render(request, 'detalle.html', {'pregunta': pregunta})
	#return HttpResponse("Estas viendo la pregunta %s." % pregunta_id)"""
	pregunta = get_object_or_404(Pregunta, pk=pregunta_id)
	return render(request, 'detalle.html', {'pregunta': pregunta})

def resultados(request, pregunta_id):
	pregunta = get_object_or_404(Pregunta, pk=pregunta_id)
	return render(request, 'resultados.html', {'pregunta': pregunta})

def voto(request, pregunta_id):
	pregunta = get_object_or_404(Pregunta, pk=pregunta_id)
	try:
		seleccion_opcion = pregunta.opcion_set.get(pk=request.POST['opcion'])
	except (KeyError, Opcion.DoesNotExist):
		return render(request, 'detalle.html', {
			'pregunta': pregunta,
			'mensaje_error': "No seleccionaste una opcion.",
		})
	else:
		seleccion_opcion.votos += 1
		seleccion_opcion.save()
		return HttpResponseRedirect(reverse('encuestas:resultados', args=(pregunta.id,)))
	#return HttpResponse("Votaste por la pregunta %s." % pregunta_id)

Resultados.html

	<h1>{{ pregunta.pregunta_texto }}</h1>

<ul>
{% for opcion in pregunta.opcion_set.all %}
	<li>{{ opcion.opcion_texto }} -- {{ opcion.votos }} vote{{ opcion.votos|pluralize }}</li>
{% endfor %}

</ul>

<a href="{% url 'encuestas:detalle' pregunta.id %}">Vota de nuevo</a>


urls.py

from django.conf.urls import url, include

from . import views

app_name = 'encuestas'
urlpatterns = [
	url(r'^$', views.index, name='index'),
	url(r'^(?P<pregunta_id>[0-9]+)/$', views.detalle, name='detalle'),
	url(r'^(?P<pregunta_id>[0-9]+)/resultados/$', views.resultados, name='resultados'),
	url(r'^(?P<pregunta_id>[0-9]+)/voto/$', views.voto, name='voto'),


]

Index.html

{% if ultima_pregunta %}	
	<ul>
		{% for pregunta in ultima_pregunta %}
			<!--<li><a href="/encuestas/{{ pregunta.id }}/">{{ pregunta.texto_pregunta }}</a>-->
			<li><a href="{% url 'encuestas:detalle' pregunta_id %}">{{ pregunta.texto_pregunta }}</a>
			</li>
		{% endfor %}
	</ul>
{% else %}
	<p> No hay encuestas disponibles.</p>
{% endif %}


Models.py

# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models

import datetime

from django.utils import timezone

# Create your models here.

class Pregunta(models.Model):
	texto_pregunta = models.CharField(max_length=200)
	pub_date = models.DateTimeField('date_published')

	def __str__(self):
		return self.texto_pregunta

class Opcion(models.Model):
	pregunta = models.ForeignKey(Pregunta, on_delete=models.CASCADE)
	opcion_texto = models.CharField(max_length=200)
	votos = models.IntegerField(default=0)

	def __str__(self):
		return self.opcion_texto